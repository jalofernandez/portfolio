doctype html
html.no-js(lang='es')
    head
        meta(http-equiv='Content-Type', content='text/html; charset=UTF-8')
        meta(name='viewport', content='width=device-width, initial-scale=1')
        title jalofernández cv resume about me
        meta(name='description', content='Sobre mi y CV personal de Javier Lorenzo Fernández (aka jalofernandez). Diseñador gráfico y desarrollador web frontend un poco friki como podéis comprobar...')
        //- meta(name='keywords', content='diseño, diseño web, dibujo, maquetación, arte, creatividad, artes finales, design, web design, creatividad, inspiración, inspiration, creative')
        //- (common) Metatags in current view
        include includes/metatags
        //- (external dependency) "upplication" Icons
        link(href='//upplication.github.io/icons/upplication-icons.css', rel='stylesheet', type='text/css')
        //- custom styles for current view
        link(rel='stylesheet', type='text/css', href='css/resume.css')

    body.old-crt-effect
        main.old-crt-effect
            //-.pieces(style='background-image: url(img/resume/fire.gif)', data-img-alt='url(img/index/alt.jpg)', data-img-code='url(img/index/code.jpg)')
            .overlay.overlay--hidden
            include includes/zeppelin
            .content
                .content__inner
                    //- main & common Header with website name & social media links:
                    include includes/header
                    //- skills list as a coder & designer
                    .skills-list
                        h3.mode--code.resume-skills-title !{resume.title}
                        .typewriter
                            //- for each loop to load all copies in "locales" json file/s
                            each skill, i in resume.skills
                              p.mode--code #{skill}
                        //- to add more "typewritting" Text (block closer)
                        a.typewrite(href='', data-period='2000', data-type='[ "Hi, I´m @jalofernandez...", "...a creative designer...", "...and a wonderfull coder...", "...go to my portfolio to check it!" ]')
                            span.wrap
                    //- (bottom) navbar links .js-modal-trigger.graph.all(data-modal='modal-01')
                    .content__bottom
                        .switch.switch--navbar.mode.mode--code
                            a.btn.btn--coder.menu__link.glitch(href='/', data-text='<< Home') #{link.home}
                            a.btn.btn--designer.menu__link.glitch.js-modal-trigger#js-resume(href='', data-modal='modal-99', data-text='Resume / C.V.') #{link.resume}
                            a.btn.btn--designer.menu__link.glitch(href='portfolio.html', data-text='Portfolio >>') #{link.portfolio}
            //- to apply a typical blink effect in old CRT monitors
            .line-anim
                .flicker
        
        //- (common) "Resume / C.V." modal dialog
        #modal-99.md-modal.md-effect-16
          .md-content
            img(src='img/resume/jalofernandez_CV-resume_2018_lowres.jpg',
                alt='@jalofernandez resume of skills & professional experience',
                title='@jalofernandez resume of skills & professional experience')
            p
              a(href="img/resume/jalofernandez_CV-resume_2018.pdf", alt='to download @jalofernandez resume', download) Resume / C.V. (Download here!)
            button(data-text='X Close me!').btn.menu__link.glitch.js-modal-close X Close me!
        //- overlay (element) common in all Modals
        .th-modal-overlay.flicker
                
        //- to prevent "<a href>" event by default
        script.
          document.getElementById("js-resume").addEventListener("click", function(event){
            event.preventDefault()
          });
        //- jQuery v3.2.1
        script(src='js/jquery.min.js')
        //- custom javascript for Modal Dialogs behaviour
        script(src='js/modals.min.js')

        //- (js) Files
          script(src='js/scripts.min.js')
          script(src='js/main.min.js')
          //- to add more "typewritting" Text (block closer)
          script.
              var TxtType = function(el, toRotate, period) {
                  this.toRotate = toRotate;
                  this.el = el;
                  this.loopNum = 0;
                  this.period = parseInt(period, 10) || 2000;
                  this.txt = '';
                  this.tick();
                  this.isDeleting = false;
              };

              TxtType.prototype.tick = function() {
                  var i = this.loopNum % this.toRotate.length;
                  var fullTxt = this.toRotate[i];

                  if (this.isDeleting) {
                  this.txt = fullTxt.substring(0, this.txt.length - 1);
                  } else {
                  this.txt = fullTxt.substring(0, this.txt.length + 1);
                  }

                  this.el.innerHTML = '<span class="wrap">'+this.txt+'</span>';

                  var that = this;
                  var delta = 200 - Math.random() * 100;

                  if (this.isDeleting) { delta /= 2; }

                  if (!this.isDeleting && this.txt === fullTxt) {
                  delta = this.period;
                  this.isDeleting = true;
                  } else if (this.isDeleting && this.txt === '') {
                  this.isDeleting = false;
                  this.loopNum++;
                  delta = 500;
                  }

                  setTimeout(function() {
                  that.tick();
                  }, delta);
              };

              window.onload = function() {
                  var elements = document.getElementsByClassName('typewrite');
                  for (var i=0; i<elements.length; i++) {
                      var toRotate = elements[i].getAttribute('data-type');
                      var period = elements[i].getAttribute('data-period');
                      if (toRotate) {
                        new TxtType(elements[i], JSON.parse(toRotate), period);
                      }
                  }
                  //- INJECT CSS
                  var css = document.createElement("style");
                  css.type = "text/css";
                  css.innerHTML = ".typewrite > .wrap { border-right: .15em solid var(--color-designer) }";
                  document.body.appendChild(css);
              };
        //- To register Service Worker & validate it by console log
        include includes/serviceworker
